version: "3" 

services: 
  drupal: 
    build:
      context: .
      dockerfile: dockerfiles/packagist-demo.dockerfile 
    container_name: packagist-demo 
    ports: 
      - 8080:8080 
    volumes:
    # For local development, you can map a local directory to the image instead of using the volume
    #  - <your local dev directory>:/opt/app-root/src/data/sites/default/
      - packagist-demo-drupal-data:/opt/app-root/src/data
    env_file:
      - .env 
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
  
  postgres: 
    image: registry.apps.dev.ocp-dev.ised-isde.canada.ca/ised-ci/ised-postgresql:9.6  
    container_name: postgres-packagist-demo
    ports: 
      - 5432:5432 
    volumes: 
      - packagist-demo-postgres-database:/var/lib/pgsql/data 
    environment: 
      POSTGRESQL_USER: $POSTGRESQL_USER 
      POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD 
      POSTGRESQL_DATABASE: $POSTGRESQL_DATABASE 
      DB_USERNAME: $DB_USERNAME 
      DB_PASSWORD: $DB_PASSWORD 
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_S3_BUCKET: $AWS_S3_BUCKET
      AWS_S3_REGION: $AWS_S3_REGION
      PATH: $PATH:/tmp
  portainer:
      image: portainer/portainer
      command: -H unix:///var/run/docker.sock
      restart: always
      ports:
        - 9000:9000
        - 8000:8000
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - portainer_data:/data


volumes:
  packagist-demo-drupal-data:
    external: true
  packagist-demo-postgres-database:
    external: true
  portainer_data:




